name: Server Push CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Docker - Login
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u shiryel --password-stdin

    - name: Docker - Build and Tag
      run: |
           docker build \
           --build-arg SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }} \
           --tag docker.pkg.github.com/shiryel/videochat_p2p/wr_server:latest \
           wr_server

    - name: Docker - Push
      run: docker push docker.pkg.github.com/shiryel/videochat_p2p/wr_server:latest

    - name: AWS - Create PEM
      run: |
        echo "${{ secrets.AWS_PEM }}" > temp.pem
        chmod 400 temp.pem

    - name: AWS - Docker Login
      run: ssh -q -o "StrictHostKeyChecking no" -i temp.pem ${{ secrets.AWS_SSH }} \
             echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u shiryel --password-stdin

    - name: AWS - Exclude last container if exists
      run: ssh -q -o "StrictHostKeyChecking no" -i temp.pem ${{ secrets.AWS_SSH }} \
             docker rm -f webrtc_server

    - name: AWS - Get and run new Image
      if: success() || failure()
      run: |
        ssh -o "StrictHostKeyChecking no" -i temp.pem ${{ secrets.AWS_SSH }} \
          docker pull docker.pkg.github.com/shiryel/videochat_p2p/wr_server:latest
        ssh -o "StrictHostKeyChecking no" -i temp.pem ${{ secrets.AWS_SSH }} \
          docker run -d \
            --name webrtc_server \
            --hostname webrtc_server \
            --publish 4000:4000 \
            --restart=always \
            docker.pkg.github.com/shiryel/videochat_p2p/wr_server:latest

    - name: AWS - Clear PEM
      if: always()
      run: rm -f temp.pem
